#!/usr/bin/python3

import sys
import os
import argparse
from libstu import *
from pprint import pprint
from copy import deepcopy
import itertools
import math

THIS = os.path.basename(sys.argv[0])
DEFAULT_INPUT = THIS + "-input"

def main():
    arg_parser = argparse.ArgumentParser(prog=THIS)
    arg_parser.add_argument("-f", "--file", default=DEFAULT_INPUT,
                            help="specify the input file (default: %(default)s)", metavar="file")
    args = arg_parser.parse_args()

    # Open input file

    input_path = os.path.abspath(args.file)
    if not os.path.exists(input_path):
        print("%s: Error: File '%s' not found" % (THIS, args.file))
        return 1

    input = open(input_path, "r")
    if input is None:
        print("%s: Error: Couldn't open file '%s'" % (THIS, input_path))
        return 1

    # Main loop
    unknown_aunt = {}
    line = input.readline().strip().replace(',', ':').split(':')
    line.pop(0)
    while line:
        k = line.pop(0).strip()
        v = int(line.pop(0).strip())
        unknown_aunt[k] = v
    print(unknown_aunt)

    aunts = {}
    matches = []
    for line in input:
        line = line.strip().replace(',', ':').split(':')
        auntid = line.pop(0)
        aunts[auntid] = {}
        ismatch = True
        while line:
            k = line.pop(0).strip()
            v = int(line.pop(0).strip())
            aunts[auntid][k] = v
            if unknown_aunt[k] != v:
                ismatch = False
        if ismatch:
            matches += [auntid]
    for m in matches:
        print((m.split(' ')[1]), aunts[m])

    match_greater = ['cats', 'trees']
    match_lesser = ['pomeranians', 'goldfish']
    matches = []
    for aunt in aunts:
        ismatch = True
        for k, v in aunts[aunt].items():
            if k in match_greater:
                if v <= unknown_aunt[k]:
                    ismatch = False
                    break
            elif k in match_lesser:
                if v >= unknown_aunt[k]:
                    ismatch = False
                    break
            else:
                if v != unknown_aunt[k]:
                    ismatch = False
                    break
        if ismatch:
            matches += [aunt]
    for m in matches:
        print((m.split(' ')[1]), aunts[m])

    return 0


if __name__ == "__main__":
    sys.exit(main())
