#!/usr/bin/python3

import sys
import os
import argparse
from libstu import *

THIS = os.path.basename(sys.argv[0])
DEFAULT_INPUT = THIS + "-input"

def main():
    arg_parser = argparse.ArgumentParser(prog=THIS)
    arg_parser.add_argument("-f", "--file", default=DEFAULT_INPUT,
                            help="specify the input file (default: %(default)s)", metavar="file")
    args = arg_parser.parse_args()

    # Open input file

    input_path = os.path.abspath(args.file)
    if not os.path.exists(input_path):
        print("%s: Error: File '%s' not found" % (THIS, args.file))
        return 1

    input = open(input_path, "r")
    if input is None:
        print("%s: Error: Couldn't open file '%s'" % (THIS, input_path))
        return 1

    # Main loop

    TREE = '#'
    OPEN = '.'
    HIT = 'X'
    SAFE = 'O'

    MRIGHT = 0
    MDOWN = 1
    XPOS = 2
    YPOS = 3
    HITS = 4

    slopes = [
                [ 1, 1, 0, 0, 0 ],
                [ 3, 1, 0, 0, 0 ],
                [ 5, 1, 0, 0, 0 ],
                [ 7, 1, 0, 0, 0 ],
                [ 1, 2, 0, 0, 0 ]
             ]

    for (lnum, line) in enumerate(input):
        line = list(line.strip())
        for slope in slopes:
            if lnum != slope[YPOS]:
                continue
            if line[slope[XPOS]] == TREE:
                slope[HITS] += 1
            slope[XPOS] = (slope[XPOS] + slope[MRIGHT]) % len(line)
            slope[YPOS] += slope[MDOWN]

    tree_product = 1
    for slope in slopes:
        print(f'Right {slope[MRIGHT]}, down {slope[MDOWN]} hit {slope[HITS]} trees.')
        tree_product *= slope[HITS]
    print(f'Hit trees product: {tree_product}')

    return 0


if __name__ == "__main__":
    sys.exit(main())
