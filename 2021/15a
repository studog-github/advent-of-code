#!/usr/bin/python3

import sys
import os
import argparse
from libstu import *
from pprint import pprint
from copy import deepcopy
import itertools
import math

from sortedcontainers import SortedList

THIS = os.path.basename(sys.argv[0])
DEFAULT_INPUT = THIS + "-input"

def main():
    arg_parser = argparse.ArgumentParser(prog=THIS)
    arg_parser.add_argument("-f", "--file", default=DEFAULT_INPUT,
                            help="specify the input file (default: %(default)s)", metavar="file")
    args = arg_parser.parse_args()

    # Open input file

    input_path = os.path.abspath(args.file)
    if not os.path.exists(input_path):
        print("%s: Error: File '%s' not found" % (THIS, args.file))
        return 1

    input = open(input_path, "r")
    if input is None:
        print("%s: Error: Couldn't open file '%s'" % (THIS, input_path))
        return 1

    # Main loop

    risks = [[int(i) for i in line.strip()] for line in input]
    maxx = len(risks[0])
    maxy = len(risks)

    costs, paths = dijkstra(risks, (0,0), (maxx-1,maxy-1))
    prev = (maxx-1,maxy-1)
    path = [prev]
    while prev != (0,0):
        px,py = prev
        prev = paths[py][px]
        path.insert(0, prev)
    print(path)
    print(f'Risk is {costs[maxy-1][maxx-1]}')

    five_risks = []
    for y in range(maxy * 5):
        five_risks.append([])
        for x in range(maxx * 5):
            risk = risks[y % maxy][x % maxx] + 1*(y//maxy) + 1*(x//maxx)
            while risk > 9:
                risk -= 9
            five_risks[y].append(risk)
    risks = five_risks
    maxx = len(risks[0])
    maxy = len(risks)

    costs, paths = dijkstra(risks, (0,0), (maxx-1,maxy-1))
    prev = (maxx-1,maxy-1)
    path = [prev]
    while prev != (0,0):
        px,py = prev
        prev = paths[py][px]
        path.insert(0, prev)
    print(path)
    print(f'Risk is {costs[maxy-1][maxx-1]}')

    return 0


if __name__ == "__main__":
    sys.exit(main())
