#!/usr/bin/python

import sys
import os
import argparse
from libstu import *

THIS = os.path.basename(sys.argv[0])
DEFAULT_INPUT = THIS + "-input"

def react(polymer):
    while True:
        reaction = False
        i = 0
        while i < len(polymer) - 1:
            if polymer[i][0] == polymer[i+1][0] and polymer[i][1] != polymer[i+1][1]:
                del polymer[i:i+2]
                reaction = True
            else:
                i += 1
        if not reaction:
            break

def remove(typ, polymer):
    #print("-={ typ: %s" % typ)
    i = 0
    while i < len(polymer):
        if polymer[i][0] == typ:
            del polymer[i]
        else:
            i += 1
    #print("-={ %s" % polymer)

def main():
    arg_parser = argparse.ArgumentParser(prog=THIS)
    arg_parser.add_argument("-f", "--file", default=DEFAULT_INPUT,
                            help="specify the input file (default: %(default)s)", metavar="file")
    args = arg_parser.parse_args()

    # Open input file

    input_path = os.path.abspath(args.file)
    if not os.path.exists(input_path):
        print("%s: Error: File '%s' not found" % (THIS, args.file))
        return 1

    input = open(input_path, "r")
    if input is None:
        print("%s: Error: Couldn't open file '%s'" % (THIS, input_path))
        return 1

    # Main loop

    polymer = [[x.lower(), x.isupper()] for x in input.readline().strip()]

    # Part A
    poly1 = deepcopy(polymer)
    react(poly1)
    print("len: %s" % len(poly1))

    # Part B
    min_len = len(polymer)
    types = set(x[0] for x in polymer)
    #print types
    for typ in types:
        poly2 = deepcopy(polymer)
        remove(typ, poly2)
        react(poly2)
        if len(poly2) < min_len:
            min_len = len(poly2)
    print("min: %s" % min_len)

    return 0


if __name__ == "__main__":
    sys.exit(main())
